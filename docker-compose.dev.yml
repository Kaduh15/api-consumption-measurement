services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: api
    command: sh -c "pnpm run db:generate && pnpm run db:migrate && pnpm run dev"
    ports:
      - 3000:${PORT:-3000}
    environment:
      - PORT=${PORT:-3000}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - URL_DEPLOY=${URL_DEPLOY:-http://localhost:3000}
      - DATABASE_URL=${DATABASE_URL:-postgresql://${POSTGRES_USER:-root}:${POSTGRES_PASSWORD:-root}@db:5432/${POSTGRES_DB:-mydb}?schema=public}
    volumes:
      - ./:/app
    healthcheck:
      test: [ "CMD", "lsof", "-t", "-i:3000" ]
      timeout: 10s
      retries: 5
    networks:
      - api_net
    restart: always
    depends_on:
      - db

  db:
    image: postgres:latest
    container_name: db
    ports:
      - 5432:5432/tcp
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-root}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-root}
      - POSTGRES_DB=${POSTGRES_DB:-mydb}
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - api_net
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-admin}
      - PGADMIN_LISTEN_PORT=5050
    ports:
      - 5050:5050
    networks:
      - api_net
    depends_on:
      - db
    restart: unless-stopped

networks:
  api_net:
    driver: bridge

volumes:
  api_volume:
  db_volume:
